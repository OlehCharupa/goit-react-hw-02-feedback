{"version":3,"sources":["Components/Statistics/Statistics.styled.js","Components/Statistics/Statistics.js","Components/App.js","index.js"],"names":["StaticticBtn","styled","button","StaticticList","ul","Statistics","good","neutral","bad","setValue","total","positiveFeedback","Math","round","name","onClick","App","state","e","setState","prev","target","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0kBAEO,IAAMA,EAAeC,IAAOC,OAAV,KAQZC,EAAgBF,IAAOG,GAAV,KCgCXC,EAtCI,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,SAClCC,EAAQJ,EAAOC,EAAUC,EACzBG,EAAmBC,KAAKC,MAAOP,EAAOI,EAAS,KACnD,OACI,oCACI,uDACA,cAACV,EAAD,CAAcc,KAAK,OAAOC,QAASN,EAAnC,kBACA,cAACT,EAAD,CAAcc,KAAK,UAAUC,QAASN,EAAtC,qBACA,cAACT,EAAD,CAAcc,KAAK,MAAMC,QAASN,EAAlC,iBAEA,4CAECH,EAAO,GAMW,mDACZC,EAAU,GAMU,mDACZC,EAAM,EAdT,eAACL,EAAD,WACR,wCAAWG,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYE,KACZ,qDAAwBC,GAAsC,IAA9D,UAe2B,sDCP5BK,E,4MAxBbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,SAAW,SAACS,GACV,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAEG,OAAOP,KAAOM,EAAKF,EAAEG,OAAOP,MAAQ,O,uDAIzC,OACE,mCACE,cAAC,EAAD,CACER,KAAMgB,KAAKL,MAAMX,KACjBC,QAASe,KAAKL,MAAMV,QACpBC,IAAKc,KAAKL,MAAMT,IAChBC,SAAUa,KAAKb,iB,GAlBPc,aCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d135f5ca.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const StaticticBtn = styled.button`\r\n    padding: 5px 15px;\r\n    margin-top: 10px;\r\n    margin-right: 10px;\r\n    cursor: pointer;\r\n    font-size: 15px;\r\n    }\r\n`\r\nexport const StaticticList = styled.ul`\r\nlist-style: none;\r\n`\r\n","import React from 'react';\r\nimport { StaticticBtn, StaticticList } from './Statistics.styled'\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Statistics = ({ good, neutral, bad, setValue }) => {\r\n    let total = good + neutral + bad\r\n    let positiveFeedback = Math.round((good / total) * 100)\r\n    return (\r\n        <section>\r\n            <h2>Please leave feedback</h2>\r\n            <StaticticBtn name=\"good\" onClick={setValue}>Good</StaticticBtn>\r\n            <StaticticBtn name=\"neutral\" onClick={setValue}>Neutral</StaticticBtn>\r\n            <StaticticBtn name=\"bad\" onClick={setValue}>Bad</StaticticBtn>\r\n\r\n            <h2>Statistics</h2>\r\n\r\n            {good > 0 ? <StaticticList>\r\n                <li>Good: {good}</li>\r\n                <li>Neutral: {neutral}</li>\r\n                <li>Bad: {bad}</li>\r\n                <li>Total: {total}</li>\r\n                <li>Positive feedback: {positiveFeedback ? positiveFeedback : \"0\"}%</li>\r\n            </StaticticList> : <p>No feedback given</p>\r\n                && neutral > 0 ? <StaticticList>\r\n                        <li>Good: {good}</li>\r\n                        <li>Neutral: {neutral}</li>\r\n                        <li>Bad: {bad}</li>\r\n                        <li>Total: {total}</li>\r\n                        <li>Positive feedback: {positiveFeedback ? positiveFeedback : \"0\"}%</li>\r\n                    </StaticticList> : <p>No feedback given</p>\r\n                        && bad > 0 ? <StaticticList>\r\n                            <li>Good: {good}</li>\r\n                            <li>Neutral: {neutral}</li>\r\n                            <li>Bad: {bad}</li>\r\n                            <li>Total: {total}</li>\r\n                            <li>Positive feedback: {positiveFeedback ? positiveFeedback : \"0\"}%</li>\r\n                        </StaticticList> : <p>No feedback given</p>}\r\n\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Statistics;\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    setValue: PropTypes.func\r\n}","import \"./App.css\"\nimport React, { Component } from 'react';\nimport Statistics from \"./Statistics/Statistics\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  }\n  setValue = (e) => {\n    this.setState((prev) => ({\n      [e.target.name]: prev[e.target.name] + 1\n    }))\n  }\n  render() {\n    return (\n      <>\n        <Statistics\n          good={this.state.good}\n          neutral={this.state.neutral}\n          bad={this.state.bad}\n          setValue={this.setValue}\n        />\n      </>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}